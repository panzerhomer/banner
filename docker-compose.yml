# version: "3.9"

# services:
#   redis:
#     image: "redis:alpine"
#     depends_on:
#       - postgres
#     ports:
#       - "6379:6379"

#   postgres:
#     image: postgres:latest
#     restart: always
#     environment:
#       POSTGRES_DB: "avito_db"
#       POSTGRES_USER: "admin"
#       POSTGRES_PASSWORD: "admin"
#     volumes:
#       - ./schema/init.sql:/docker-entrypoint-initdb.d/init.sql
#       - ./postgres:/data/postgres
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres -d avito_db"]
#       interval: 5s
#       timeout: 5s
#       retries: 5

#   app:
#     build: ./app
#     depends_on:
#       postgres:
#          condition: service_healthy
#     ports:
#       - "8080:8080"

# version: '3.9'
# services:
#   app:
#     build: .
#     ports:
#       - 8080:8080
#     # restart: on-failure
#     # volumes:
#     #   - .:/app
#     depends_on:
#       - db
#       - redis
#     networks:
#       - itnet

#   db:
#     image: postgres:latest
#     environment:
#       POSTGRES_DB: "avito_db"
#       POSTGRES_USER: "admin"
#       POSTGRES_PASSWORD: "admin"
#       DATABASE_HOST: "0.0.0.0"
#     ports:
#       - '5432:5432'
#     networks:
#       - itnet

#   redis:
#     image: redis:alpine
#     ports:
#       - "6379:6379"
#     networks:
#       - itnet

# networks:
#   itnet:
#     driver: bridge

version: '3.9'
name: avito-test
services:
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: "avito_db"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - ./schema/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    # restart: always
    networks:
      - itnet

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - itnet

  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - itnet
    
networks:
  itnet:
    driver: bridge